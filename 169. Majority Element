class Solution {
    public int majorityElement(int[] nums) {
        int majority = nums[0], c= 1;
        for(int i=1;i<nums.length;i++){
            if(majority ==nums[i])
                c++;
            else if(c==0){
                majority = nums[i];
                c=1;
            }
            else
                c--;
        }
        return majority;
    }
}

class Solution {
    public int majorityElement(int[] nums) {
        HashMap<Integer,Integer>map = new HashMap<>();
        int n = nums.length;
        for(int i=0;i<n;i++){
            if(map.containsKey(nums[i]))
                map.put(nums[i], map.get(nums[i])+1);
            else
                map.put(nums[i], 1);
        }
        for(Map.Entry<Integer, Integer>arr:map.entrySet()){
            if(arr.getValue()>n/2)
                return arr.getKey();
        }
        return -1;
    }
}
