public int lengthOfLongestSubstring(String s) {


           int n = s.length();
        if (n == 0) {
            return 0;
        }
        
        int maxLength = 0;
        int[] lastIndex = new int[128]; // Assuming ASCII characters
        
        int left = 0;
        
        for (int right = 0; right < n; right++) {
            char currentChar = s.charAt(right);
            
            // Update the left pointer to skip characters within the current window
            left = Math.max(left, lastIndex[currentChar]);
            
            // Update the last occurrence index of the current character
            lastIndex[currentChar] = right + 1;
            
            // Update the maximum length of substring without repeating characters
            maxLength = Math.max(maxLength, right - left + 1);
        }
        
        return maxLength;
    }
