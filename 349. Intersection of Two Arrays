class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        int[] visited = new int[1001];
        int[] result = new int[nums1.length + nums2.length];
        for(int i = 0; i < nums1.length; i++){
            visited[nums1[i]] = 1;
        }   
        int size= 0;
        for(int i = 0; i < nums2.length; i++){
            if(visited[nums2[i]] == 1){
                result[size++] = nums2[i];
                visited[nums2[i]] = 0;
            }
        }   
        return Arrays.copyOfRange(result, 0, size);
    }
}

class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        ArrayList<Integer>result = new ArrayList<>();
        for(int i=0;i<nums1.length;i++){
            for(int j=0;j<nums2.length;j++){
                if(nums1[i] == nums2[j]){
                    if(!result.contains(nums1[i])){
                        result.add(nums1[i]);
                        break;
                    }
                }
            }
        }
        int[] arr = new int[result.size()];
        for(int i=0;i<arr.length;i++){
            arr[i] = result.get(i);
        }
        return arr;
    }
}
