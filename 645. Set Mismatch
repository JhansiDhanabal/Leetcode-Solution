class Solution {
    public int[] findErrorNums(int[] nums) {

        int n = nums.length;
        int[] count = new int[n + 1]; 
        int[] result = new int[2];

        for (int num : nums) {
            count[num]++;
        }

        for (int i = 1; i <= n; i++) {
            if (count[i] == 2) {
                result[0] = i; 
            } else if (count[i] == 0) {
                result[1] = i; 
            }
        }

        return result;
    }
}

class Solution {
    public int[] findErrorNums(int[] nums) {
        int n = nums.length;
        int arr[] = new int[n+1];
        int duplicate = 0, num, sum = 0;
        for(int i=0; i<n ; i++){
            arr[nums[i]]+=1;
            if(arr[nums[i]] == 2)
                duplicate = nums[i];
            sum += nums[i];
        }
        int orginal = n*(n+1)/2;
        sum -= duplicate;
        num = orginal - sum;
        return new int[]{duplicate, num};
    }
}
